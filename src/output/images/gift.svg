var _path;
var _excluded = ["title", "titleId"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import * as React from "react";
function SvgGift(_ref, svgRef) {
  var title = _ref.title,
    titleId = _ref.titleId,
    props = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: 24,
    height: 26,
    viewBox: "0 0 24 26",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement("path", {
    d: "M5.83594 25.1641C4.72656 25.1641 3.875 24.8789 3.28125 24.3086C2.69531 23.7383 2.40234 22.8984 2.40234 21.7891V14.5938H2.32031C1.80469 14.4844 1.41016 14.2305 1.13672 13.832C0.863281 13.4336 0.726562 12.9375 0.726562 12.3438V9.26172C0.726562 8.55078 0.925781 7.98438 1.32422 7.5625C1.72266 7.14062 2.26562 6.92969 2.95312 6.92969H5.32031C5.00781 6.625 4.76172 6.26562 4.58203 5.85156C4.41016 5.42969 4.32422 4.97656 4.32422 4.49219C4.32422 3.73437 4.50391 3.0625 4.86328 2.47656C5.23047 1.89062 5.71875 1.43359 6.32812 1.10547C6.94531 0.769531 7.63281 0.601562 8.39062 0.601562C9.21875 0.601562 9.94922 0.816406 10.582 1.24609C11.2227 1.67578 11.6914 2.28516 11.9883 3.07422C12.2852 2.28516 12.7539 1.67578 13.3945 1.24609C14.0352 0.816406 14.7656 0.601562 15.5859 0.601562C16.3438 0.601562 17.0273 0.769531 17.6367 1.10547C18.2539 1.43359 18.7422 1.89062 19.1016 2.47656C19.4688 3.0625 19.6523 3.73437 19.6523 4.49219C19.6523 4.97656 19.5664 5.42969 19.3945 5.85156C19.2227 6.26562 18.9805 6.625 18.668 6.92969H21.0352C21.7539 6.92969 22.3047 7.14062 22.6875 7.5625C23.0703 7.98438 23.2617 8.55078 23.2617 9.26172V12.3438C23.2617 12.9375 23.1211 13.4336 22.8398 13.832C22.5664 14.2305 22.1719 14.4844 21.6562 14.5938H21.5742V21.7891C21.5742 22.8984 21.2773 23.7383 20.6836 24.3086C20.0977 24.8789 19.2539 25.1641 18.1523 25.1641H5.83594ZM10.9453 23.4062V14.6758H4.28906V21.8828C4.28906 22.3672 4.42188 22.7422 4.6875 23.0078C4.95312 23.2734 5.32812 23.4062 5.8125 23.4062H10.9453ZM13.0312 23.4062H18.1641C18.6562 23.4062 19.0312 23.2734 19.2891 23.0078C19.5547 22.7422 19.6875 22.3672 19.6875 21.8828V14.6758H13.0312V23.4062ZM10.9453 12.9062V8.69922H3.43359C3.13672 8.69922 2.92578 8.76172 2.80078 8.88672C2.67578 9.01172 2.61328 9.22266 2.61328 9.51953V12.0742C2.61328 12.3711 2.67578 12.5859 2.80078 12.7188C2.92578 12.8438 3.13672 12.9062 3.43359 12.9062H10.9453ZM13.0312 12.9062H20.5664C20.8555 12.9062 21.0625 12.8438 21.1875 12.7188C21.3125 12.5859 21.375 12.3711 21.375 12.0742V9.51953C21.375 9.22266 21.3125 9.01172 21.1875 8.88672C21.0625 8.76172 20.8555 8.69922 20.5664 8.69922H13.0312V12.9062ZM11.0273 6.92969V5.34766C11.0273 4.48047 10.7812 3.80078 10.2891 3.30859C9.80469 2.80859 9.21094 2.55859 8.50781 2.55859C7.86719 2.55859 7.33594 2.73828 6.91406 3.09766C6.49219 3.44922 6.28125 3.94922 6.28125 4.59766C6.28125 5.24609 6.53516 5.79688 7.04297 6.25C7.55859 6.70312 8.27734 6.92969 9.19922 6.92969H11.0273ZM12.9492 6.92969H14.7773C15.6992 6.92969 16.4141 6.70312 16.9219 6.25C17.4375 5.79688 17.6953 5.24609 17.6953 4.59766C17.6953 3.94922 17.4844 3.44922 17.0625 3.09766C16.6484 2.73828 16.1172 2.55859 15.4688 2.55859C14.7734 2.55859 14.1797 2.80859 13.6875 3.30859C13.1953 3.80078 12.9492 4.48047 12.9492 5.34766V6.92969Z",
    fill: "#FF6D24"
  })));
}
var ForwardRef = /*#__PURE__*/React.forwardRef(SvgGift);
export default __webpack_public_path__ + "static/media/gift.528778e664ea927d61a9fd1ded1a8e1f.svg";
export { ForwardRef as ReactComponent };